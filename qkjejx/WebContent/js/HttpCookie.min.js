if(new Array().splice==null){Array.prototype.splice=function(){if(arguments.length<2||arguments[1]<0)
return new Array();var endPoint1=arguments[0];if(endPoint1<0&&Math.abs(endPoint1)>this.length)
endPoint1=0;var startPoint2=(endPoint1<0)?(this.length+endPoint1+arguments[1]):(endPoint1+arguments[1]);var bArray=this.slice(0,endPoint1);var dArray=this.slice(endPoint1,startPoint2);var eArray=this.slice(startPoint2);var nArray=new Array();for(var i=2,al=arguments.length;i<al;i++){nArray.push(arguments[i]);}
var fArray=bArray.concat(nArray,eArray);for(var i=0,al=fArray.length;i<al;i++){this[i]=fArray[i];}
this.length=fArray.length;return dArray;}}
function NameValueCollection(){this.__keys=new Array();this.__values=new Object();this.__checkArg=function(){for(var i=0,j=arguments.length;i<j;i++){if(typeof arguments[i]!="string")
return false;}
return true;}
this.allKeys=function(){return this.__keys.concat();}
this.getValues=function(name){if(!this.__checkArg(name)){throw new Error("Invalid type on NameValueCollection.getValues's argument.");}
var values=this.__values[name.toLowerCase()];return(values instanceof Array)?values:null;}
this.add=function(name,value){if(!this.__checkArg(name,value)){throw new Error("Invalid type on NameValueCollection.add's argument");}
var key=name.toLowerCase();if(this.__values[key]==null){this.__keys[this.__keys.length]=name;this.__values[key]=new Array(value);}else{this.__values[key][this.__values[key].length]=value;}}
this.get=function(name){if(!this.__checkArg(name)){throw new Error("Invalid type on NameValueCollection.get's argument");}
var value=this.__values[name.toLowerCase()];return(value instanceof Array)?value.join(","):null;}
this.set=function(name,value){if(!this.__checkArg(name,value)){throw new Error("Invalid type on NameValueCollection.set's argument");}
var key=name.toLowerCase();if(this.__values[key]==null){this.__keys[this.__keys.length]=name;}
this.__values[key]=new Array(value);}
this.hasKeys=function(){return this.__keys.length>0;}
this.clear=function(){this.__keys=new Array();this.__values=new Object();}
this.remove=function(name){if(!this.__checkArg(name)){throw new Error("Invalid type on NameValueCollection.remove's argument");}
var key=name.toLowerCase();if(this.__values[key]==null)
return;for(var i=0,j=this.__keys.length;i<j;i++){if(this.__keys[i]==key){this.__keys.splice(i,1);this.__values[key]=null;return;}}}}
function HttpCookie(name){this.__name;this.__isExisted;this.__expires;this.__value;this.__path;this.values;this.isExisted=function(){return this.__isExisted;}
this.hasKeys=function(){return this.values.hasKeys();}
this.__analysisCooString=function(cstring){var subCookies=cstring.split("&");for(var k=0,l=subCookies.length;k<l;k++){var key,values,splitPos;splitPos=subCookies[k].indexOf("=");if(splitPos!=-1){key=subCookies[k].substring(0,splitPos);values=subCookies[k].substring(splitPos+1);values=values.split(",");for(var m=0,n=values.length;m<n;m++)
this.values.add(key,values[m]);}else{this.__value=subCookies[k];}}}
this.__init=function(name){if(typeof name!="string")
throw new Error("Invalid type on HttpCookie's argument");this.__name=(name!=null)?name:"";this.__value="";this.__isExisted=false;this.__expires=null;this.__path="/";this.values=new NameValueCollection();var cookies=document.cookie.split("; ");for(var i=0,j=cookies.length;i<j;i++){var name,value,splitPos;splitPos=cookies[i].indexOf("=");if(splitPos!=-1){name=cookies[i].substring(0,splitPos);value=cookies[i].substring(splitPos+1);}else{name=cookies[i];}
if(this.__name.toLowerCase()==name.toLowerCase()){this.__isExisted=true;if(value==null)
return;this.__analysisCooString(value);break;}}}
this.getName=function(){return this.__name;}
this.setValue=function(value){if(value!=null){this.__value=value.toString();this.values=new NameValueCollection();}}
this.getValue=function(){var value=new String();if(this.values.hasKeys()){var keys=this.values.allKeys();for(var i=0,j=keys.length;i<j;i++){value+="&"+keys[i]+"="+this.values.get(keys[i]);}}
return this.__value+((this.__value=="")?value.substring(1):value);}
this.setExpires=function(secs){if(typeof secs=="number"){var sysExpiresTime=new Date().getTime()+parseInt(secs)*1000;this.__expires=new Date(sysExpiresTime).toGMTString();}}
this.setPath=function(path){if(path!=null)
this.__path=path.toString();}
this.save=function(){document.cookie=this.__name+"="+this.getValue()+";"
+((this.__expires!=null)?"expires="+this.__expires+";":"")+"path="+this.__path+";";}
this.__init(name);}